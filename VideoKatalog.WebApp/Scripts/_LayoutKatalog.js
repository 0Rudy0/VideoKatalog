//#region GLOBAL VARIABLES
// =========================================================================
//                              GLOBAL VARIABLES
// =========================================================================

// if orientation is supported (eg. mobile device) 
// instead of resize, do the orientation event
var supportsOrientationChange = 'onorientationchange' in window,
    orientationEvent = supportsOrientationChange ? 'orientationchange' : 'resize';
var selectedHDD = new SelectedHDD();
var selectedMovieIdArray = new Array();
var selectedEpisodeIdArray = new Array();
var selectedSerieIdArray = new Array();
var dateLastVisited = new Date();
var selectedSerieArray = new Array();

//#endregion

//#region FUNCTIONS
// =========================================================================
//                                FUNCTIONS
// =========================================================================

function SelectedSerie() {
	this.id;
	this.array = new Array();
}
function getSelected() {
	$('#mainLoading').css('display', 'block');
	$.ajax({
		url: '/VideoKatalog/Home/GetSelected',
		type: "GET",
		dataType: "text",
		async: true,
		cache: false,
		success: function (msg) {
			//return;
			if (msg.indexOf('<!--SCRIPT GENERATED BY SERVER! PLEASE REMOVE-->') > -1) {
				msg = msg.substring(0, msg.indexOf("<!--SCRIPT GENERATED BY SERVER! PLEASE REMOVE-->"));
			}
			var result = jQuery.parseJSON(msg);
			selectedMovieIdArray = result.movieIDs;
			selectedHDD.sizeSelected = 0;
			for (var i = 0; i < movieArray.length; i++) {
				if (isMovieSelected(movieArray[i].id)) {
					selectedHDD.sizeSelected += movieArray[i].size;
				}
			}
			selectedEpisodeIdArray = result.episodeIDs;
			updatePercentage();
			hideAllUnwantedElements();
		},
		error: function (e) {
			alert('Neispravan format odabira');
		}
	});
}

function SelectedHDD() {
	this.sizeHDD = 0;
	this.sizeSelected = 0;
}

function setPropperHddSize(size) {
	var byteSize = size * 1000 * 1000 * 1000;
	//byteselectedHDD.sizeHDDSize = byteSize / Math.pow(1024, 3);
	return byteSize;
}
function formatFloat(num, casasDec) {
	/// <summary>Fromats float number to wanted formatting</summary>
	/// <param name="num" type="Number">Float number to format</param>
	/// <param name="casasDec" type="Number">Number of decimal numbers, if undefined  or null than 0</param>
	/// <returns type="String">Float number in string format based on passed parametars</returns>
	num = num === Infinity ? 0 : num;
	var origNum = num;
	if (casasDec == 'undefined' || casasDec == null) {
		casacDec = 0;
	}
	sepDecimal = decimalSeparator;
	sepMilhar = thousandSeparator;
	if (num < 0) {
		num = -num;
		sinal = -1;
	} else
		sinal = 1;
	var resposta = "";
	var part = "";
	if (num != Math.floor(num)) // decimal values present
	{
		part = Math.round((num - Math.floor(num)) * Math.pow(10, casasDec)).toString(); // transforms decimal part into integer (rounded)
		while (part.length < casasDec)
			part = '0' + part;
		if (casasDec > 0) {
			resposta = sepDecimal + part;
			num = Math.floor(num);
		} else
			num = Math.round(num);
	} // end of decimal part
	while (num > 0) // integer part
	{
		part = (num - Math.floor(num / 1000) * 1000).toString(); // part = three less significant digits
		num = Math.floor(num / 1000);
		if (num > 0)
			while (part.length < 3) // 123.023.123  if sepMilhar = '.'
				part = '0' + part; // 023
		resposta = part + resposta;
		if (num > 0)
			resposta = sepMilhar + resposta;
	}
	if (origNum < 1 && origNum > -1) {
		resposta = '0' + resposta;
	}
	if (sinal < 0)
		resposta = '-' + resposta;
	if (resposta == '') {
		return '0';
	}
	return resposta;
}
function getRuntimeInText(valueInMiliseconds) {
	var valueInMinutes = valueInMiliseconds / 60000;
	var valueInHours = valueInMinutes / 60;
	valueInMinutes = valueInMinutes % 60;
	if (valueInHours > 0) {
		return Math.floor(valueInHours) + "h " + Math.round(valueInMinutes) + "m";
	}
	else {
		return Math.round(valueInMinutes) + "m";;
	}
}
function getRuntimeInMinutes(valueInMiliseconds) {
	var valueInMinutes = valueInMiliseconds / 60000;
	return valueInMinutes;
}
function getSize(valueInBytes) {
	var size = valueInBytes;
	var count = 0;
	while (count < 3) {
		size /= 1024.0;
		count++;
	}
	return size;
}
function removeHyperlinks(text) {
	if (text.indexOf('<a href') >= 0) {
		var startIndex = text.indexOf('<a href');
		var endIndex = text.indexOf('</a>');
		text = text.substring(0, startIndex);
		return removeHyperlinks(text);
	}
	else {
		return text;
	}
}

// ============================================================
//                          MAIN RESIZE
// ============================================================
function resize() {
	var windowWidth = $(window).width(); //retrieve current window width
	var windowHeight = $(window).height();
	$('#resolution').html(windowWidth + ' x ' + windowHeight + ' (' + formatFloat(windowWidth / windowHeight, 2) + ')');
}

//#endregion

//#region EVENT HANDLERS
// =========================================================================
//                             EVENT HANDLERS
// =========================================================================

function updatePercentage(doesAlert) {
	selectedHDD.sizeHDD = $("div.fancy-select ul.options li.selected").attr("data-raw-value");
	var propperHDDSize = setPropperHddSize($("div.fancy-select ul.options li.selected").attr("data-raw-value"));
	//alert(hddSize);	
	var percentage = (selectedHDD.sizeSelected / propperHDDSize) * 100;

	if (propperHDDSize == 0) {
		percentage = 0;
	}
	else {
		if (percentage > 100) {
			$('div.ui-progressbar-value.ui-widget-header').css('background', 'red');
			//var sizeOver = selectedHDD.sizeSelected - propperHDDSize;
			//sizeOver = sizeOver / (1024 * 1024 * 1024);
			if (doesAlert) {
				setTimeout(function () {
					alert('Prekoračen kapacitet!');
				}, 200);
			}
		}
		else {
			$('div.ui-progressbar-value.ui-widget-header').css('background', '#cccccc url(images/ui-bg_highlight-soft_75_cccccc_1x100.png) 50% 50% repeat-x');
		}
	}

	$("#progressBar").progressbar({
		value: percentage
	});

	$('#selectedPercentage').html(formatFloat(percentage, 1) + " %");
	$('#selectedSize').html(formatFloat(selectedHDD.sizeSelected / (1024 * 1024 * 1024), 1) + " GB");
	localStorage.setItem('selectedHDD', JSON.stringify(selectedHDD));
}
function saveToTxt() {
	var propperHDDSize = setPropperHddSize($("div.fancy-select ul.options li.selected").attr("data-raw-value"));
	var percentage = (selectedHDD.sizeSelected / propperHDDSize) * 100;
	if (propperHDDSize == 0) {
		percentage = 0;
	}
	if (percentage > 100) {
		var sizeOver = selectedHDD.sizeSelected - propperHDDSize;
		sizeOver = sizeOver / (1024 * 1024 * 1024);
		alert('Ukupnan odabir ne stane na odabranu veličinu HDDa (' + formatFloat(sizeOver, 2) + ' GB previše odabrano)');
		return;
	}
	var selectedString = "F";
	for (var i = 0; i < selectedMovieIdArray.length; i++) {
		selectedString += "%" + selectedMovieIdArray[i];
	}
	selectedString += "!S";
	for (var i = 0; i < selectedSerieArray.length; i++) {
		selectedString += '#' + selectedSerieArray[i].id;
		for (var j = 0; j < selectedSerieArray[i].array.length; j++) {
			selectedString += '$' + selectedSerieArray[i].array[j].id;
			for (var k = 0; k < selectedSerieArray[i].array[j].array.length; k++) {
				selectedString += '&' + selectedSerieArray[i].array[j].array[k].id;
			}
		}
		//selectedString += selectedEpisodeIdArray[i] + "%";
	}
	var blob = new Blob([selectedString], { type: "text/plain;charset=utf-8" });
	saveAs(blob, "Popis odabranog.txt");
}
function clearAllSelected() {
	var txt;
	if (selectedHDD.sizeSelected > 0) {
		var r = confirm("Obrisati sve odabrane filmove i serije?");
		if (r == true) {
			$('#mainLoading').css('display', 'block');
			selectedMovieIdArray = new Array();
			selectedSerieArray = new Array();
			selectedHDD.sizeSelected = 0;
			localStorage.setItem('selectedMoviesID', JSON.stringify(selectedMovieIdArray));
			localStorage.setItem('selectedSeries', JSON.stringify(selectedSerieArray));
			updatePercentage();
			if (document.getElementById('movieListBox') != null) {
				var saveStatus = movieFilter.showSelected;
				movieFilter.showSelected = true;
				filterMovies("#selectedMovieListBox");
				movieFilter.showSelected = false;
				filterMovies("#movieListBox");
				movieFilter.showSelected = saveStatus;
			}
			else {
				serieFilter.showSelected = true;
				filterSeries("#selectedSerieTree");
				serieFilter.showSelected = false;
			}
			$('#mainLoading').css('display', 'none');
		} else {

		}
	}
}

//#endregion

//#region ON LOAD
// =========================================================================
//                                  ON LOAD
// =========================================================================
$(function () {
	hideAllUnwantedElements();
	$('#trailerWindow').jqxWindow({
		showCollapseButton: false,
		maxHeight: $('#mainContent').height() * 0.9,
		maxWidth: $('#mainContent').width() * 0.9,
		minHeight: $('#mainContent').height() * 0.5,
		minWidth: $('#mainContent').width() * 0.5,
		height: $('#mainContent').height() * 0.9,
		width: $('#mainContent').width() * 0.8,
		initContent: function () {
			$('#trailerWindow').jqxWindow('focus');
			$('#trailerWindow').jqxWindow('close');
		}
	});

	$('#uploadWindow').jqxWindow({
		showCollapseButton: true, maxHeight: 400, maxWidth: 700, minHeight: 200, minWidth: 200, height: 300, width: 500,
		theme: 'metrodark',
		initContent: function () {
			//$('#tab').jqxTabs({ height: '100%', width: '100%' });
			$('#uploadWindow').jqxWindow('close');
		}
	});

	$('#loadTxt').click(function (event) {
		alert('Trenutno nije funkcionalno');
		//$('#uploadWindow').jqxWindow('open');
		//sessionStorage.setItem('loadFile', true);
		event.stopPropagation();
	});
	$('#saveToTxt').click(function (event) {
		saveToTxt();
		event.stopPropagation();
	});
	$('#clearAll').click(function (event) {
		clearAllSelected();
		event.stopPropagation();
	});

	$('#hddSizeSelect').click(function (event) {
		event.stopPropagation();
	});

	$('#filterButtonMobile').click(function () {
		toggleFilterContent();
	});
	$('#filterButton').click(function () {
		toggleFilterContent();
	});
	$('#applyFiltersButton').click(function () {
		toggleFilterContent();
	});

	$('#mainContent').click(function () {
		//alert('');
		$("#filters2").animate({
			opacity: "0",
		}, 500, 'easeInOutSine', function () {
			$('#filters2').css('display', 'none');
		});
		$("#mainContent").animate({
			opacity: "1",
		}, 500, 'easeInOutSine', function () {
		});
	});


	$("#hddSizeSelect").fancySelect();
	$("#progressBar").progressbar({
		value: 0
	});

	$("div.fancy-select ul.options").click(function () {
		updatePercentage();
	})

	if (localStorage.getItem('selectedMoviesID') != null) {
		selectedMovieIdArray = JSON.parse(localStorage.getItem('selectedMoviesID'));
	}
	if (localStorage.getItem('selectedSeries') != null) {
		selectedSerieArray = JSON.parse(localStorage.getItem('selectedSeries'));
	}
	if (localStorage.getItem('selectedHDD') != null) {
		selectedHDD = JSON.parse(localStorage.getItem('selectedHDD'));
		$('#hddSizeSelectDiv li[data-raw-value="' + selectedHDD.sizeHDD + '"]').trigger('click');
		updatePercentage();
	}

	try {
		if (localStorage.getItem('dateLastVisited') == null) {
			if (localStorage.getItem('dateLastVisited') == null) {
				localStorage.setItem('dateLastVisited', JSON.stringify(new Date));
			}
			else {
				dateLastVisited = new Date(JSON.parse(localStorage.getItem('dateLastVisited')));
				localStorage.setItem('dateLastVisited', JSON.stringify(dateLastVisited));
			}
		}
		else {
			dateLastVisited = new Date(JSON.parse(localStorage.getItem('dateLastVisited')));
			var todayDate = new Date();
			if (todayDate.getDay() != dateLastVisited.getDay() && todayDate.getMonth() != dateLastVisited.getMonth() && todayDate.getFullYear() != dateLastVisited.getFullYear()) {
				clearAllSelected();
			}
			//localStorage.setItem('dateLastVisited', JSON.stringify(new Date(2013, 1, 1, 0, 0, 0, 0)));
		}
	}
	catch (e) {

	}
	//alert(dateLastVisited.toDateString());
	//dateLastVisited = (localStorage.getItem('dateLastVisited') == null) ? new Date : new Date(JSON.parse(localStorage.getItem('dateLastVisited')));
	//var today = new Date();
	//if (dateLastVisited != null &&
	//	dateLastVisited.getDate() == today.getDate() &&
	//	dateLastVisited.getMonth() == today.getMonth() &&
	//	dateLastVisited.getFullYear() == today.getFullYear())
	//	dateLastVisited = null;
	localStorage.setItem('dateLastVisited', JSON.stringify(new Date()));


	if (loadSelected) {
		getSelected();
	}

	$("#submitBtn").jqxButton({ width: '150' });
})
function toggleFilterContent() {
	if ($('#filters2').css('opacity') == '1') {
		$("#filters2").animate({
			opacity: "0",
		}, 500, 'easeInOutSine', function () {
			$('#filters2').css('display', 'none');
		});
		$("#mainContent").animate({
			opacity: "1",
		}, 500, 'easeInOutSine', function () {
		});
	}
	else {
		$('#filters2').css('display', 'block');
		$("#filters2").animate({
			opacity: "1",
		}, 500, 'easeInOutSine', function () {
			// Animation complete.
		});
		$("#mainContent").animate({
			opacity: "0.5",
		}, 500, 'easeInOutSine', function () {
		});
	}
}
function hideAllUnwantedElements() {
	$("div[style='opacity: 0.9; z-index: 2147483647; position: fixed; left: 0px; bottom: 0px; height: 65px; right: 0px; display: block; width: 100%; background-color: #202020; margin: 0px; padding: 0px;']").css('display', 'none');
	$("div[style='left: 0px; width: 100%; height: 65px; right: 0px; bottom: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; display: block; position: fixed; z-index: 2147483647; opacity: 0.9; background-color: rgb(32, 32, 32);']").css('display', 'none');
	$("div[style='position: fixed; z-index: 2147483647; left: 0px; bottom: 0px; height: 65px; right: 0px; display: block; width: 100%; background-color: transparent; margin: 0px; padding: 0px;']").css('display', 'none');
	$("div[style='margin: 0px; padding: 0px; left: 0px; width: 100%; height: 65px; right: 0px; bottom: 0px; display: block; position: fixed; z-index: 2147483647; opacity: 0.9; background-color: rgb(32, 32, 32);']").css('display', 'none');
	$("div[style='margin: 0px; padding: 0px; left: 0px; width: 100%; height: 65px; right: 0px; bottom: 0px; display: block; position: fixed; z-index: 2147483647; background-color: transparent;']").css('display', 'none');
	$("div[style='margin: 0px; padding: 0px; left: 0px; width: 100%; height: 65px; right: 0px; bottom: 0px; display: block; position: fixed; z-index: 2147483647; background-color: transparent;']").css('display', 'none');
	$("div[style='height: 65px;']").css('display', 'none');

	//$('body:nth-child(3)"]').css('display', 'none');

	//    var cleanedBody = $('body').html().replace("<div style='height: 65px;'>" +
	//"    </div>" +
	//"    <div style='opacity: 0.9; z-index: 2147483647; position: fixed; left: 0px; bottom: 0px; height: 65px; right: 0px; display: block; width: 100%; background-color: #202020; margin: 0px; padding: 0px;'>" +
	//"    </div>" +
	//"    <div onmouseover='S_ssac();' onmouseout='D_ssac();' style='position: fixed; z-index: 2147483647; left: 0px; bottom: 0px; height: 65px; right: 0px; display: block; width: 100%; background-color: transparent; margin: 0px; padding: 0px;'>" +
	//"        <div style='width: 100%; color: White; font-family: \"Helvetica Neue\", \"Lucida Grande\", \"Segoe UI\", Arial, Helvetica, Verdana, sans-serif; font-size: 11pt;'>" +
	//"            <div style='margin-right: auto; margin-left: auto; display: table;  padding:9px; font-size:13pt;'>" +
	//"                <a href='http://somee.com/VirtualServer.aspx' style=' text-decoration: none; color:White; margin-right:6px; margin-left:6px;'>Hosted Windows Virtual Server. 2.5GHz CPU, 1.5GB RAM, 60GB HDD. Try it now for $1!</a>" +
	//"             </div >" +
	//"            <div style='margin-right: auto; margin-left: auto; display: table; font-size: 9pt; '>" +
	//"                <a href='http://somee.com' style=' text-decoration: none; color:White; margin-right:6px; margin-left:6px; font-size: 10pt;'>Web hosting by Somee.com</a>" +
	//"            </div>" +
	//"        </div>" +
	//"    </div>", "");
	//    $('body').html(cleanedBody);

}

//#endregion

//#region FUNCTION AND EVENT BINDING
// =========================================================================
//                         FUNCTION AND EVENT BINDING
// =========================================================================
if (!window.addEventListener) {
	window.attachEvent('onresize', function () {
		resize();
	});
}
else {
	window.addEventListener(orientationEvent, function () {
		resize();
	}, false);
}

window.onload = function () {
	resize();
}

//#endregion

